const weatherUrl="https://api.openweathermap.org/data/2.5/weather",geocodeUrl="http://api.openweathermap.org/geo/1.0/direct",reverseGeocodeUrl="http://api.openweathermap.org/geo/1.0/reverse",apiKey="f00c38e0279b7bc85480c3fe775d518c";async function weatherFn(e){let t=`${weatherUrl}?q=${e}&appid=${apiKey}&units=metric`;try{let o=await fetch(t),a=await o.json();o.ok?(weatherShowFn(a),await getGeocodeData(e)):showToast("Error","City not found. Please try again.")}catch(r){console.error("Error fetching weather data:",r),showToast("Error","Failed to fetch weather data.")}}async function getGeocodeData(e){let t=`http://api.openweathermap.org/geo/1.0/direct?q=${e}&limit=1&appid=${apiKey}`;try{let o=await fetch(t),a=await o.json();if(a.length>0){let r=a[0];$("#location").text(`${r.state}, ${r.country}`)}else showToast("Error","Location details not found.")}catch(n){console.error("Error fetching geocode data:",n),showToast("Error","Failed to fetch location details.")}}function weatherShowFn(e){$("#city-name").text(e.name),$("#date").text(moment().format("MMMM Do YYYY, h:mm:ss a")),$("#temperature").html(`${e.main.temp}\xb0C`),$("#description").text(e.weather[0].description),$("#wind-speed").html(`Wind Speed: ${e.wind.speed} m/s`),updateWeatherIcon(e.weather[0].description),$("#weather-info").fadeIn()}function updateWeatherIcon(e){let t;t=(e=e.toLowerCase()).includes("clear")?"icons/sun.png":e.includes("rain")||e.includes("drizzle")?"icons/rain.png":e.includes("cloud")?"icons/cloud.png":e.includes("snow")?"icons/snow.png":e.includes("thunderstorm")?"icons/thunderstorm.png":"icons/default.png",$("#weather-icon").attr("src",t)}function showToast(e,t){let o=$(`
    <div class="toast">
        <div class="toast-content">
            <i class="fas fa-exclamation-circle toast-check"></i>
            <div class="message">
                <span class="message-text text-1">${e}</span>
                <span class="message-text text-2">${t}</span>
            </div>
        </div>
        <i class="fas fa-times toast-close"></i>
        <div class="progress"></div>
    </div>
`);$("#toast-container").append(o),setTimeout(()=>{o.addClass("active"),o.find(".progress").addClass("active")},100),setTimeout(()=>{o.removeClass("active"),setTimeout(()=>{o.remove()},500)},3e3),o.find(".toast-close").click(()=>{o.removeClass("active"),setTimeout(()=>{o.remove()},500)})}async function getWeatherByCoords(e,t){let o=`${weatherUrl}?lat=${e}&lon=${t}&appid=${apiKey}&units=metric`;try{let a=await fetch(o),r=await a.json();a.ok?(weatherShowFn(r),await getReverseGeocodeData(e,t)):showToast("Error","Weather data not found for your location.")}catch(n){console.error("Error fetching weather data:",n),showToast("Error","Failed to fetch weather data.")}}async function getReverseGeocodeData(e,t){let o=`http://api.openweathermap.org/geo/1.0/reverse?lat=${e}&lon=${t}&limit=1&appid=${apiKey}`;try{let a=await fetch(o),r=await a.json();if(r.length>0){let n=r[0];$("#city-name").text(n.name),$("#location").text(`${n.state}, ${n.country}`)}else showToast("Error","Location details not found.")}catch(s){console.error("Error fetching reverse geocode data:",s),showToast("Error","Failed to fetch location details.")}}function showPosition(e){let t=e.coords.latitude,o=e.coords.longitude;getWeatherByCoords(t,o)}function showError(e){switch(e.code){case e.PERMISSION_DENIED:showToast("Error","User denied the request for Geolocation.");break;case e.POSITION_UNAVAILABLE:showToast("Error","Location information is unavailable.");break;case e.TIMEOUT:showToast("Error","The request to get user location timed out.");break;case e.UNKNOWN_ERROR:showToast("Error","An unknown error occurred.")}}function resetInputField(){document.getElementById("city-input").value="";let e=document.getElementById("weather-info");e.style.display="none"}function resetFilters(){let e=document.querySelectorAll(".facet-single-selection-list");e.forEach(e=>{e.querySelectorAll(".facet-search-filter.has-active-facet .facet-value.active-facet").forEach(t=>{t.classList.remove("active-facet");let o=e.querySelector(`input[type="checkbox"][id="${t.id}"]`);o&&(o.checked=!1)})})}$(document).ready(function(){weatherFn("Pune")}),$(document).ready(function(){$("#get-location").click(function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(showPosition,showError):showToast("Error","Geolocation is not supported by this browser.")})});const resetButton=document.querySelector(".reset-filter-button");resetButton&&resetButton.addEventListener("click",e=>{e.preventDefault(),resetFilters()}),$(document).on({contextmenu:function(e){console.log("ctx menu button:",e.which),e.preventDefault()},mousedown:function(e){console.log("normal mouse down:",e.which)},mouseup:function(e){console.log("normal mouse up:",e.which)}});